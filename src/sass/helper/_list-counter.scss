.list-nest-counter {
  ol  {
    counter-reset: nest;
  }
  li {
    padding-top: 1em;
    counter-increment: nest;
    &::marker {
      content: counters(nest, '.') ' ';
    }
  }
}

.list-formal {
  list-style: trad-chinese-formal;
  padding-inline-start: 2em;
}

.list-informal {
  list-style: trad-chinese-informal;
  padding-inline-start: 2em;
}
.list-num-parenthese {
  counter-reset: number;
  li {
    counter-increment: number;
    &::marker {
      content: '('counter(number)') ';
    }
  }
}
.list-title-informal {
  counter-reset: number;
  h2 {
    counter-increment: number;
    &::before {
      content: counter(number, trad-chinese-informal)'、';
    }
  }
}

.list-pl-0 {
  list-style-position: inside;
  padding-inline-start: 0;
  ol {
    padding-inline-start: 1rem;
  }
}

.list-px-0 {
  margin-block-end: 0;
  padding-inline-start: 0;
  li {
    padding-right: 0;
    padding-left: 0;
  }
}

.list-number {
  counter-reset: num;
  > :before {
    content: counter(num, decimal-leading-zero) '.';
    counter-increment: num;
  }
}
// https://developer.mozilla.org/en-US/docs/Web/CSS/counters
// https://developer.mozilla.org/en-US/docs/Web/CSS/counter